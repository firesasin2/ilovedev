"use strict";(self.webpackChunkACRA_Point_V3_Education=self.webpackChunkACRA_Point_V3_Education||[]).push([[8470],{9484:(r,n,e)=>{e.r(n),e.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var t=e(5893),i=e(1151);const o={},s="handler.go",l={type:"mdx",permalink:"/ilovedev/wauth/handler",source:"@site/src/pages/wauth/handler.md",title:"handler.go",description:"\ud578\ub4e4\ub7ec",frontMatter:{},unlisted:!1},a={},c=[{value:"\ud578\ub4e4\ub7ec",id:"\ud578\ub4e4\ub7ec",level:3},{value:"getClaims \ud568\uc218",id:"getclaims-\ud568\uc218",level:3}];function u(r){const n={code:"code",h1:"h1",h3:"h3",li:"li",pre:"pre",ul:"ul",...(0,i.a)(),...r.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"handlergo",children:"handler.go"}),"\n",(0,t.jsx)("br",{}),"\n",(0,t.jsx)(n.h3,{id:"\ud578\ub4e4\ub7ec",children:"\ud578\ub4e4\ub7ec"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"wauth\uc5d0\uc11c \uac01\uac01\uc758 http \uc694\uccad\uc744 \ub2f4\ub2f9\ud558\ub294 \ud568\uc218"}),"\n",(0,t.jsx)(n.li,{children:"wauth\uc5d0\uc11c \ubaa8\ub4e0 http \uc694\uccad\uc740 \uac01\uac01\uc744 \ub2f4\ub2f9\ud558\ub294 \ud578\ub4e4\ub7ec \ud568\uc218\uac00 \uc788\uc74c"}),"\n",(0,t.jsxs)(n.li,{children:["\uad00\ub9ac\uc790 \uc870\ud68c \ud578\ub4e4\ub7ec","\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:'func HandlerListAdmins(w http.ResponseWriter, r *http.Request) {\r\n  // \ucc98\uc74c\uc5d0\ub294 Handler\ud568\uc218 \uc774\ub984\r\n  logging.Debugln("HandlerListAdmins")\r\n\r\n  // request\ub97c \ubd84\uc11d\ud574\uc11c, JWT\ud1a0\ud070 \uc815\ubcf4\ub97c \uac00\uc838\uc634\r\n  claims, _, err := getClaims(r)\r\n  if err != nil {\r\n    logging.Errorln(err)\r\n    w.WriteHeader(http.StatusUnauthorized)\r\n    w.Write([]byte(tool.ErrorStack(err, "E_DEFT_0000").Error()))\r\n    return\r\n  }\r\n\r\n  if claims == nil {\r\n    logging.Errorln(fmt.Errorf("claims is nil"))\r\n    w.WriteHeader(http.StatusUnauthorized)\r\n    return\r\n  }\r\n\r\n  // \ud544\ud130 \uad6c\ubb38 \ud568\uc218\r\n  query, fields, sort, max, err := tool.ParseHttpQueryString(r, 0)\r\n  if err != nil {\r\n    logging.Errorln(err)\r\n    if err == tool.ErrHttpQueryMaxValue {\r\n      w.WriteHeader(http.StatusBadRequest)\r\n      w.Write([]byte(tool.ErrorStack(err, "E_DEFT_0001").Error()))\r\n      return\r\n    } else {\r\n      w.WriteHeader(http.StatusBadRequest)\r\n      w.Write([]byte(tool.ErrorStack(err, "E_DEFT_0000").Error()))\r\n      return\r\n    }\r\n  }\r\n\r\n  // \uad00\ub9ac\uc790 \uc870\ud68c\r\n  admins, err := adminMgr.List(r.Context(), query, fields, sort, max)\r\n  if err != nil {\r\n    logging.Errorln(err)\r\n    w.WriteHeader(http.StatusBadRequest)\r\n    w.Write([]byte(tool.ErrorStack(err).Error()))\r\n    return\r\n  }\r\n\r\n  // \ub85c\uc9c1: \ube44\ubc00\ubc88\ud638 \uac00\ub9ac\uae30\r\n  if claims.Person.Type == string(info.PERSON_TYPE_ADMIN) {\r\n    newAdmins := []info.Admin{}\r\n    for _, admin := range admins {\r\n      admin.Password = ""\r\n      newAdmins = append(newAdmins, admin)\r\n    }\r\n\r\n    admins = newAdmins\r\n  }\r\n\r\n  // http \uacb0\uacfc \ub9ac\ud134(JSON)\r\n  b, err := json.Marshal(admins) // {"Age":23,"Score":77.2}\r\n  if err != nil {\r\n    logging.Errorln(err)\r\n    w.WriteHeader(http.StatusBadRequest)\r\n    w.Write([]byte(tool.ErrorStack(err).Error()))\r\n    return\r\n  }\r\n  w.Write(b)\r\n}\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\uad00\ub9ac\uc790 \uc0dd\uc131 \ud578\ub4e4\ub7ec","\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:'func HandlerCreateAdmin(w http.ResponseWriter, r *http.Request) {\r\n  logging.Debugln("HandlerCreateAdmin")\r\n\r\n  // request\ub97c \ubd84\uc11d\ud574\uc11c, JWT\ud1a0\ud070 \uc815\ubcf4\ub97c \uac00\uc838\uc634\r\n  claims, _, err := getClaims(r)\r\n  if err != nil {\r\n    logging.Errorln(err)\r\n    w.WriteHeader(http.StatusUnauthorized)\r\n    w.Write([]byte(tool.ErrorStack(err, "E_DEFT_0000").Error()))\r\n    return\r\n  }\r\n\r\n  // \ubbf8\ub4e4\uc6e8\uc5d0\uc11c Subjects\uac12\uc744 \ubc1b\uc544\uc634 (context\uc5d0\uc11c \uac12\uc744 \uac00\uc838\uc634)\r\n  v := r.Context().Value("Subjects")\r\n  if v == nil {\r\n    err = fmt.Errorf("can\'t find Subjects in r")\r\n    logging.Errorln(err)\r\n    w.WriteHeader(http.StatusInternalServerError)\r\n    w.Write([]byte(tool.ErrorStack(err, "E_DEFT_0000").Error()))\r\n    return\r\n  }\r\n\r\n  subjects, ok := v.([]info.Subject)\r\n  if !ok {\r\n    err = fmt.Errorf("subject type assertion err")\r\n    logging.Errorln(err)\r\n    w.WriteHeader(http.StatusInternalServerError)\r\n    w.Write([]byte(tool.ErrorStack(err, "E_DEFT_0000").Error()))\r\n    return\r\n  }\r\n\r\n  // \ud1a0\ud070 \uc815\ucc45 \uc870\ud68c\r\n  tokenPolicy, err := tokenPolicyMgr.Get(r.Context(), "admin")\r\n  if err != nil {\r\n    logging.Errorln(err)\r\n    w.WriteHeader(http.StatusBadRequest)\r\n    w.Write([]byte(tool.ErrorStack(err, "E_DEFT_0000").Error()))\r\n    return\r\n  }\r\n\r\n  // \ud604\uc7ac\uc2dc\uac04\r\n  now := time.Now()\r\n\r\n  newSubjects := []info.Subject{}\r\n\r\n  // subjects\ub97c \uc21c\ud68c\ud558\uc5ec \uc694\uccad\uc744 \ucc98\ub9ac\ud568\r\n  for _, subject := range subjects {\r\n\r\n    req := info.Admin{}\r\n    err = json.Unmarshal(subject.SubjectRequestByte, &req)\r\n    if err != nil {\r\n      logging.Errorln(err)\r\n      subject.Result = string(info.SUBJECT_RESULT_FAIL)\r\n      subject.ResultDetail = tool.ErrorStack(err, "E_DEFT_0000").Error()\r\n      newSubjects = append(newSubjects, subject)\r\n      continue\r\n    }\r\n    subject.SubjectRequestByte = []byte{}\r\n\r\n    subject.Subject_ID = req.ID\r\n    subject.ID = tool.NewUniqueID()\r\n\r\n    // \uc54c\ub9bc\uc744 \uc704\ud55c msg\r\n    inboxMsg := "ID: " + req.ID + "\\n"\r\n\r\n    // TagValidate\r\n    err = tool.TagValidate("ko", req, "validate")\r\n    if err != nil {\r\n      logging.Errorln(tool.ErrorStack(err, "E_TAGV_0001"))\r\n      subject.Result = string(info.SUBJECT_RESULT_FAIL)\r\n      subject.ResultDetail = err.Error()\r\n      newSubjects = append(newSubjects, subject)\r\n      continue\r\n    }\r\n\r\n    // Role\uc774 \uc788\ub294\uc9c0 \uac80\uc0ac\r\n    _, err = roleMgr.Get(r.Context(), req.AdminRole_ID)\r\n    if err != nil {\r\n      logging.Errorln(err)\r\n      subject.Result = string(info.SUBJECT_RESULT_FAIL)\r\n      subject.ResultDetail = "Role\uc774 \uc5c6\uc2b5\ub2c8\ub2e4."\r\n      newSubjects = append(newSubjects, subject)\r\n      continue\r\n    }\r\n\r\n    // \ub85c\uc9c1: \ud1a0\ud070\uc815\ucc45 \ud655\uc778\uc774\ud6c4, offline\ud1a0\ud070 \uc0dd\uc131\r\n    if tokenPolicy.GenOfflineTokenWhenPeopleAdd {\r\n      req.OfflineSecret, err = tokenMgr.OfflineGenerateAdmin(&req, 600)\r\n      if err != nil {\r\n        logging.Errorln(err)\r\n        subject.Result = string(info.SUBJECT_RESULT_FAIL)\r\n        subject.ResultDetail = tool.ErrorStack(err, "E_DEFT_0000").Error()\r\n        newSubjects = append(newSubjects, subject)\r\n        continue\r\n      }\r\n      req.OfflineSecretLastChangedTimestamp = now.Unix()\r\n\r\n      // \uc54c\ub9bc\uc744 \uc704\ud55c \uba54\uc2dc\uc9c0\r\n      tagName, err := tool.GetTagName(req, "OfflineSecret", "ko")\r\n      if err != nil {\r\n        inboxMsg += tagName + ": " + req.OfflineSecret + "\\n"\r\n      }\r\n    }\r\n\r\n    // \ub85c\uc9c1: \ud1a0\ud070\uc815\ucc45 \ud655\uc778\uc774\ud6c4, online\ud1a0\ud070 \uc0dd\uc131\r\n    if tokenPolicy.GenOnlineTokenWhenPeopleAdd {\r\n      req.OnlineSecret, err = tokenMgr.AdminOnlineTokenGenerate(&req)\r\n      if err != nil {\r\n        logging.Errorln(err)\r\n        subject.Result = string(info.SUBJECT_RESULT_FAIL)\r\n        subject.ResultDetail = tool.ErrorStack(err, "E_DEFT_0000").Error()\r\n        newSubjects = append(newSubjects, subject)\r\n        continue\r\n      }\r\n      req.OnlineSecretLastChangedTimestamp = now.Unix()\r\n\r\n      // \uc54c\ub9bc\uc744 \uc704\ud55c \uba54\uc2dc\uc9c0\r\n      tagName, err := tool.GetTagName(req, "OnlineSecret", "ko")\r\n      if err != nil {\r\n        inboxMsg += tagName + ": " + req.OnlineSecret + "\\n"\r\n      }\r\n    }\r\n\r\n    if len(req.Password) <= 0 {\r\n      err = fmt.Errorf("password is needed")\r\n      subject.Result = string(info.SUBJECT_RESULT_FAIL)\r\n      subject.ResultDetail = err.Error()\r\n      newSubjects = append(newSubjects, subject)\r\n    }\r\n\r\n    // \ub85c\uc9c1: \ube44\ubc00\ubc88\ud638 \ubcf5\ud638\ud654\r\n    if claims.Person.Type != string(info.PERSON_TYPE_SERVICE) && claims.Person.Type != string(info.PERSON_TYPE_APITOKEN) {\r\n      if len(req.Password) <= 32 {\r\n        err = fmt.Errorf("front <-> go AES \uc554\ubcf5\ud638\ud654 \uc624\ub958: 32\uc790\ub9ac\ubcf4\ub2e4 \ucee4\uc57c \ud568")\r\n        logging.Errorln(err)\r\n        subject.Result = string(info.SUBJECT_RESULT_FAIL)\r\n        subject.ResultDetail = tool.ErrorStack(err, "E_DEFT_0000").Error()\r\n        newSubjects = append(newSubjects, subject)\r\n        continue\r\n      }\r\n      // \ub85c\uc9c1: Front\uc5d0\uc11c " "\ub9cc\ud07c \uc9e4\ub77c\uc11c \ubcf5\ud638\ud654 \ud569\ub2c8\ub2e4.(RSA \uc554\ubcf5\ud638\ud654 \ub370\uc774\ud130 \ucd5c\ub300 \uae38\uc774 \ud55c\uac1c)\r\n      splited := strings.Split(req.Password[32:], " ")\r\n      decodeSuccess := true\r\n      // \ub85c\uc9c1: base64 decode\r\n      for i := 0; i < len(splited); i++ {\r\n        mwb, err := base64.StdEncoding.DecodeString(splited[i])\r\n        if err != nil {\r\n          err = fmt.Errorf("front <-> go AES Base64 decrypt \uc624\ub958: " + err.Error())\r\n          logging.Errorln(err)\r\n          decodeSuccess = false\r\n          break\r\n        }\r\n        splited[i] = string(mwb)\r\n      }\r\n      if !decodeSuccess {\r\n        subject.Result = string(info.SUBJECT_RESULT_FAIL)\r\n        subject.ResultDetail = tool.ErrorStack(err, "E_DEFT_0000").Error()\r\n        newSubjects = append(newSubjects, subject)\r\n        continue\r\n      }\r\n      // \ub85c\uc9c1: RSA key \uac00\uc838\uc624\uae30\r\n      rsaKey, err := rsaKeyMgr.Get(r.Context(), req.Password[0:32])\r\n      if err != nil {\r\n        err = fmt.Errorf("front <-> go RSA key \uac00\uc838\uc624\uae30 \uc624\ub958: " + err.Error())\r\n        logging.Errorln(err)\r\n        subject.Result = string(info.SUBJECT_RESULT_FAIL)\r\n        subject.ResultDetail = tool.ErrorStack(err, "E_DEFT_0000").Error()\r\n        newSubjects = append(newSubjects, subject)\r\n        continue\r\n      }\r\n      rsaPrivateKeyByte, err := tool.DecodeBase64AndAES256CTRDecrypt(libconfigkey.GetAESKeyOnce(r.Context(), logging, client), rsaKey.RSAPrivateKey)\r\n      if err != nil {\r\n        err = fmt.Errorf("front <-> go AES \ubcf5\ud638\ud654 \uc624\ub958: " + err.Error())\r\n        logging.Errorln(err)\r\n        subject.Result = string(info.SUBJECT_RESULT_FAIL)\r\n        subject.ResultDetail = tool.ErrorStack(err, "E_DEFT_0000").Error()\r\n        newSubjects = append(newSubjects, subject)\r\n        continue\r\n      }\r\n      rsaPrivateKey, err := x509.ParsePKCS1PrivateKey(rsaPrivateKeyByte)\r\n      if err != nil {\r\n        err = fmt.Errorf("front <-> go AES \ubcf5\ud638\ud654 \uc624\ub958: " + err.Error())\r\n        logging.Errorln(err)\r\n        subject.Result = string(info.SUBJECT_RESULT_FAIL)\r\n        subject.ResultDetail = tool.ErrorStack(err, "E_DEFT_0000").Error()\r\n        newSubjects = append(newSubjects, subject)\r\n        continue\r\n      }\r\n      s := ""\r\n      decryptSuccess := true\r\n      for i := 0; i < len(splited); i++ {\r\n        // \ub85c\uc9c1: RSA \uac1c\uc778 \ud0a4\ub85c \uc554\ud638\ud654\ub41c \ub370\uc774\ud130 \ubcf5\ud638\ud654\r\n        decrypted, err := rsa.DecryptOAEP(sha256.New(), rand.Reader, rsaPrivateKey, []byte(splited[i]), nil)\r\n        if err != nil {\r\n          err = fmt.Errorf("front <-> go AES \ubcf5\ud638\ud654 \uc624\ub958: " + err.Error())\r\n          logging.Errorln(err)\r\n          decryptSuccess = false\r\n          break\r\n        }\r\n        s += string(decrypted)\r\n      }\r\n      if !decryptSuccess {\r\n        subject.Result = string(info.SUBJECT_RESULT_FAIL)\r\n        subject.ResultDetail = tool.ErrorStack(err, "E_DEFT_0000").Error()\r\n        newSubjects = append(newSubjects, subject)\r\n        continue\r\n      }\r\n      req.Password = string(s)\r\n    }\r\n\r\n    // \ub85c\uc9c1: password\uac00 \uaddc\uce59\uc5d0 \ub9de\ub294\uc9c0 \uac80\uc0ac\r\n    err = passwordRuleMgr.AdminValidaterule(r.Context(), "admin", &req, req.Password)\r\n    if err != nil {\r\n      logging.Errorln(err)\r\n      subject.Result = string(info.SUBJECT_RESULT_FAIL)\r\n      subject.ResultDetail = err.Error()\r\n      newSubjects = append(newSubjects, subject)\r\n      continue\r\n    }\r\n\r\n    old, new, err := adminMgr.Create(r.Context(), req, REGULATION)\r\n    if err != nil {\r\n      logging.Errorln(err)\r\n      subject.Result = string(info.SUBJECT_RESULT_FAIL)\r\n      subject.ResultDetail = err.Error()\r\n      newSubjects = append(newSubjects, subject)\r\n      continue\r\n    }\r\n\r\n    // \ub85c\uc9c1: \uc0dd\uc131 \uc54c\ub9bc\r\n    adminInbox := info.AdminInbox{\r\n      Admin_ID:        req.ID,\r\n      CreateTimestamp: now.Unix(),\r\n      SenderType:      string(info.PERSON_TYPE_SERVICE),\r\n      SenderID:        string(info.PROCESS_NAME_WAUTH),\r\n      Titre:           "\uad00\ub9ac\uc790 \uc0dd\uc131",\r\n      Message:         inboxMsg,\r\n    }\r\n    _, _, err = adminInboxMgr.Create(r.Context(), adminInbox)\r\n    if err != nil {\r\n      logging.Errorln(err)\r\n    }\r\n\r\n    // \ub85c\uc9c1: \uc5f0\uacb0\uc815\ubcf4\ub97c subject\uc5d0 \ub2f4\uc2b5\ub2c8\ub2e4.\r\n    subjectRelatedInfo := bson.M{}\r\n    subjectRelatedInfo, err = makeSubjectRelatedInfo(r.Context(), subjectRelatedInfo, old, r)\r\n    if err != nil {\r\n      logging.Errorln(err)\r\n    } else {\r\n      subject.SubjectRelatedInfo = subjectRelatedInfo\r\n    }\r\n    subjectRelatedInfo, err = makeSubjectRelatedInfo(r.Context(), subjectRelatedInfo, new, r)\r\n    if err != nil {\r\n      logging.Errorln(err)\r\n    } else {\r\n      subject.SubjectRelatedInfo = subjectRelatedInfo\r\n    }\r\n\r\n    // \uc131\uacf5\r\n    subject.Result = string(info.SUBJECT_RESULT_SUCCESS)\r\n    subject.SubjectBefore = nil\r\n    subject.SubjectAfter = new\r\n\r\n    newSubjects = append(newSubjects, subject)\r\n  }\r\n\r\n  // \uacb0\uacfc \uc804\uc1a1\r\n  b, err := json.Marshal(newSubjects)\r\n  if err != nil {\r\n    logging.Errorln(err)\r\n    w.WriteHeader(http.StatusInternalServerError)\r\n    w.Write([]byte(tool.ErrorStack(err, "E_DEFT_0000").Error()))\r\n    return\r\n  }\r\n\r\n  w.WriteHeader(http.StatusOK)\r\n  w.Write(b)\r\n}\n'})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)("br",{}),"\n",(0,t.jsx)(n.h3,{id:"getclaims-\ud568\uc218",children:"getClaims \ud568\uc218"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["request\ub97c \ubd84\uc11d\ud574\uc11c, JWT\ud1a0\ud070 \uc815\ubcf4\ub97c \uac00\uc838\uc624\ub294 \ud568\uc218","\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:'func getClaims(r *http.Request) (*libinfo.Claims, string, error) {\r\n  // \ucfe0\ud0a4\ub85c\ubd80\ud130 sessionID \uac12\uc744 \uac00\uc838\uc635\ub2c8\ub2e4.\r\n  c, err := r.Cookie("sessionID")\r\n  switch {\r\n  case err == http.ErrNoCookie:\r\n    return nil, "", nil\r\n  case err != nil:\r\n    logging.Errorln(err)\r\n    return nil, "", fmt.Errorf("could not get waxcookie. cause %w", err)\r\n  }\r\n\r\n  waxcookieString := c.Value\r\n  claims := &libinfo.Claims{}\r\n\r\n  // JWT \ud30c\uc2f1\r\n  tkn, err := jwt.ParseWithClaims(waxcookieString, claims, func(token *jwt.Token) (interface{}, error) {\r\n    return JWTKey, nil\r\n  })\r\n\r\n  switch {\r\n  case err == jwt.ErrSignatureInvalid:\r\n    return &libinfo.Claims{}, waxcookieString, nil\r\n  case err != nil:\r\n    return &libinfo.Claims{}, waxcookieString, fmt.Errorf("could not parse jwt, cause %w", err)\r\n  case !tkn.Valid:\r\n    return &libinfo.Claims{}, waxcookieString, nil\r\n  }\r\n\r\n  logging.Verboseln(claims)\r\n\r\n  return claims, waxcookieString, nil\r\n}\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Claims \uad6c\uc870\uccb4","\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:'type Claims struct {\r\n  Person      Person `json:"person"`\r\n  ConsoleType string `json:"ConsoleType"`\r\n  IP          string `json:"IP"`\r\n  jwt.StandardClaims\r\n}\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["jwt.StandardClaims \uad6c\uc870\uccb4","\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:'type StandardClaims struct {\r\n  Audience  string `json:"aud,omitempty"`\r\n  ExpiresAt int64  `json:"exp,omitempty"`\r\n  Id        string `json:"jti,omitempty"`\r\n  IssuedAt  int64  `json:"iat,omitempty"`\r\n  Issuer    string `json:"iss,omitempty"`\r\n  NotBefore int64  `json:"nbf,omitempty"`\r\n  Subject   string `json:"sub,omitempty"`\r\n}\n'})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:""})]})}function d(r={}){const{wrapper:n}={...(0,i.a)(),...r.components};return n?(0,t.jsx)(n,{...r,children:(0,t.jsx)(u,{...r})}):u(r)}},1151:(r,n,e)=>{e.d(n,{Z:()=>l,a:()=>s});var t=e(7294);const i={},o=t.createContext(i);function s(r){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof r?r(n):{...n,...r}}),[n,r])}function l(r){let n;return n=r.disableParentContext?"function"==typeof r.components?r.components(i):r.components||i:s(r.components),t.createElement(o.Provider,{value:n},r.children)}}}]);